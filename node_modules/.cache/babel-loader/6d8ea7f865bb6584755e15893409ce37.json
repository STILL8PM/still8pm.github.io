{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\idea\\\\react\\\\react_staging\\\\src\\\\component\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport PubSub from 'pubsub-js'; // import axios from 'axios'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.search = () => {\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this; //发送前请求前通知List更新状态\n\n      PubSub.publish('atguigu', {\n        isFirst: false,\n        isLoading: true\n      }); //发送网络请求---使用fetch\n\n      fetch(`/api1/search/users2?q=${keyWord}`).then(response => {\n        console.log('联系服务器成功了');\n      }, error => {\n        console.log('联系服务器失败了', error);\n      }); //发送网络请求---使用axios\n\n      /* axios.get(`/api1/search/users2?q=${keyWord}`).then(\r\n      \tresponse => {\r\n      \t\t//请求成功后通知List更新状态\r\n      \t\tPubSub.publish('atguigu',{ isLoading: false, users: response.data.items })\r\n      \t},\r\n      \terror => {\r\n      \t\t//请求失败后通知List更新状态\r\n      \t\tPubSub.publish('atguigu',{ isLoading: false, err: error.message })\r\n      \t}\r\n      ) */\n    };\n\n    this.handleKeyUp = event => {\n      const {\n        keyCode\n      } = event;\n      if (keyCode !== 13) return;\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this; //发送前请求前通知List更新状态\n\n      PubSub.publish('atguigu', {\n        isFirst: false,\n        isLoading: true\n      }); //发送网络请求---使用axios\n\n      /* axios.get(`/api1/search/users2?q=${keyWord}`).then(\r\n      \tresponse => {\r\n      \t\t//请求成功后通知List更新状态\r\n      \t\tPubSub.publish('atguigu',{ isLoading: false, users: response.data.items })\r\n      \t},\r\n      \terror => {\r\n      \t\t//请求失败后通知List更新状态\r\n      \t\tPubSub.publish('atguigu',{ isLoading: false, err: error.message })\r\n      \t}\r\n      ) */\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22Github\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onKeyUp: this.handleKeyUp,\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Github/idea/react/react_staging/src/component/Search/index.jsx"],"names":["React","Component","PubSub","Search","search","keyWordElement","value","keyWord","publish","isFirst","isLoading","fetch","then","response","console","log","error","handleKeyUp","event","keyCode","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;;AACA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE7CG,MAF6C,GAEpC,MAAM;AACd,YAAM;AAAEC,QAAAA,cAAc,EAAE;AAAEC,UAAAA,KAAK,EAAEC;AAAT;AAAlB,UAAyC,IAA/C,CADc,CAEd;;AACAL,MAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAAyB;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAAzB,EAHc,CAId;;AACAC,MAAAA,KAAK,CAAE,yBAAwBJ,OAAQ,EAAlC,CAAL,CAA0CK,IAA1C,CACEC,QAAQ,IAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEb,OAHF,EAIEC,KAAK,IAAI;AAACF,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,KAAvB;AAA+B,OAJ3C,EALc,CAgBd;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,KA7B4C;;AAAA,SA+B7CC,WA/B6C,GA+B9BC,KAAD,IAAW;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAcD,KAApB;AACA,UAAIC,OAAO,KAAK,EAAhB,EAAoB;AACpB,YAAM;AAAEd,QAAAA,cAAc,EAAE;AAAEC,UAAAA,KAAK,EAAEC;AAAT;AAAlB,UAAyC,IAA/C,CAHwB,CAIxB;;AACAL,MAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAAyB;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAAzB,EALwB,CAWxB;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,KArD4C;AAAA;;AAuD7CU,EAAAA,MAAM,GAAG;AACR,wBACC;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACC;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,gCACC;AAAO,UAAA,OAAO,EAAE,KAAKH,WAArB;AAAkC,UAAA,GAAG,EAAEI,CAAC,IAAI,KAAKhB,cAAL,GAAsBgB,CAAlE;AAAqE,UAAA,IAAI,EAAC,MAA1E;AAAiF,UAAA,WAAW,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA,gBADD,uBAEC;AAAQ,UAAA,OAAO,EAAE,KAAKjB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAjE4C","sourcesContent":["import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js'\r\n// import axios from 'axios'\r\nexport default class Search extends Component {\r\n\r\n\tsearch = () => {\r\n\t\tconst { keyWordElement: { value: keyWord } } = this\r\n\t\t//发送前请求前通知List更新状态\r\n\t\tPubSub.publish('atguigu',{ isFirst: false, isLoading: true })\r\n\t\t//发送网络请求---使用fetch\r\n\t\tfetch(`/api1/search/users2?q=${keyWord}`).then(\r\n\t\t\t\tresponse => {console.log('联系服务器成功了');\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t\terror => {console.log('联系服务器失败了',error);}\r\n\t\t\t)\r\n\r\n\r\n\r\n\r\n\r\n\t\t//发送网络请求---使用axios\r\n\t\t/* axios.get(`/api1/search/users2?q=${keyWord}`).then(\r\n\t\t\tresponse => {\r\n\t\t\t\t//请求成功后通知List更新状态\r\n\t\t\t\tPubSub.publish('atguigu',{ isLoading: false, users: response.data.items })\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\t//请求失败后通知List更新状态\r\n\t\t\t\tPubSub.publish('atguigu',{ isLoading: false, err: error.message })\r\n\t\t\t}\r\n\t\t) */\r\n\t}\r\n\r\n\thandleKeyUp = (event) => {\r\n\t\tconst { keyCode } = event\r\n\t\tif (keyCode !== 13) return\r\n\t\tconst { keyWordElement: { value: keyWord } } = this\r\n\t\t//发送前请求前通知List更新状态\r\n\t\tPubSub.publish('atguigu',{ isFirst: false, isLoading: true })\r\n\t\t\r\n\r\n\r\n\r\n\r\n\t\t//发送网络请求---使用axios\r\n\t\t/* axios.get(`/api1/search/users2?q=${keyWord}`).then(\r\n\t\t\tresponse => {\r\n\t\t\t\t//请求成功后通知List更新状态\r\n\t\t\t\tPubSub.publish('atguigu',{ isLoading: false, users: response.data.items })\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\t//请求失败后通知List更新状态\r\n\t\t\t\tPubSub.publish('atguigu',{ isLoading: false, err: error.message })\r\n\t\t\t}\r\n\t\t) */\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section className=\"jumbotron\">\r\n\t\t\t\t<h3 className=\"jumbotron-heading\">搜索Github用户</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onKeyUp={this.handleKeyUp} ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"输入关键词点击搜索\" />&nbsp;\r\n\t\t\t\t\t<button onClick={this.search}>搜索</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}