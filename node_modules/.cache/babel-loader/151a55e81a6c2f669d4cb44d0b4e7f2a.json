{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\idea\\\\react\\\\react_staging\\\\src\\\\component\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.search = () => {\n      //判断是否是回车按键\n      if (keyCode !== 13) return; //获取用户输入(连续结构赋值+重命名)\n\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this; //发送前请求前通知App更新状态\n\n      this.props.updateAppState({\n        isFirst: false,\n        isLoading: true\n      }); //发送网络请求\n\n      axios.get(`/api1/search/users?q=${keyWord}`).then(response => {\n        //请求成功后通知App更新状态\n        this.props.updateAppState({\n          isLoading: false,\n          users: response.data.items\n        });\n      }, error => {\n        //请求失败后通知App更新状态\n        this.props.updateAppState({\n          isLoading: false,\n          err: error.message\n        });\n      });\n    };\n\n    this.handleKeyUp = event => {\n      //解构赋值获取keyCode,target\n      const {\n        keyCode,\n        target\n      } = event; //判断是否是回车按键\n\n      if (keyCode !== 13) return; //添加的todo名字不能为空，      .trim()去掉空格\n\n      if (target.value.trim() === '') {\n        alert('输入不能为空');\n        return;\n      }\n\n      this.props.addTodo(todoObj); //清空输入\n\n      target.value = '';\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22Github\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onKeyUp: this.handleKeyUp,\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Github/idea/react/react_staging/src/component/Search/index.jsx"],"names":["React","Component","axios","Search","search","keyCode","keyWordElement","value","keyWord","props","updateAppState","isFirst","isLoading","get","then","response","users","data","items","error","err","message","handleKeyUp","event","target","trim","alert","addTodo","todoObj","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE1CG,MAF0C,GAEjC,MAAM;AACV;AACA,UAAIC,OAAO,KAAK,EAAhB,EAAoB,OAFV,CAGX;;AACA,YAAM;AAAEC,QAAAA,cAAc,EAAE;AAAEC,UAAAA,KAAK,EAAEC;AAAT;AAAlB,UAAyC,IAA/C,CAJW,CAKX;;AACA,WAAKC,KAAL,CAAWC,cAAX,CAA0B;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAA1B,EANW,CAOX;;AACAV,MAAAA,KAAK,CAACW,GAAN,CAAW,wBAAuBL,OAAQ,EAA1C,EAA6CM,IAA7C,CACIC,QAAQ,IAAI;AACR;AACA,aAAKN,KAAL,CAAWC,cAAX,CAA0B;AAAEE,UAAAA,SAAS,EAAE,KAAb;AAAoBI,UAAAA,KAAK,EAAED,QAAQ,CAACE,IAAT,CAAcC;AAAzC,SAA1B;AACH,OAJL,EAKIC,KAAK,IAAI;AACL;AACA,aAAKV,KAAL,CAAWC,cAAX,CAA0B;AAAEE,UAAAA,SAAS,EAAE,KAAb;AAAoBQ,UAAAA,GAAG,EAAED,KAAK,CAACE;AAA/B,SAA1B;AACH,OARL;AAUH,KApByC;;AAAA,SAsB1CC,WAtB0C,GAsB3BC,KAAD,IAAW;AACrB;AACA,YAAM;AAAElB,QAAAA,OAAF;AAAWmB,QAAAA;AAAX,UAAsBD,KAA5B,CAFqB,CAGrB;;AACA,UAAIlB,OAAO,KAAK,EAAhB,EAAoB,OAJC,CAKrB;;AACA,UAAImB,MAAM,CAACjB,KAAP,CAAakB,IAAb,OAAwB,EAA5B,EAAgC;AAC5BC,QAAAA,KAAK,CAAC,QAAD,CAAL;AACA;AACH;;AACD,WAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,OAAnB,EAVqB,CAWrB;;AACAJ,MAAAA,MAAM,CAACjB,KAAP,GAAe,EAAf;AACH,KAnCyC;AAAA;;AAoC1CsB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAO,UAAA,GAAG,EAAEC,CAAC,IAAI,KAAKxB,cAAL,GAAsBwB,CAAvC;AAA0C,UAAA,IAAI,EAAC,MAA/C;AAAsD,UAAA,WAAW,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADJ,uBAEI;AAAQ,UAAA,OAAO,EAAE,KAAKR,WAAtB;AAAmC,UAAA,OAAO,EAAE,KAAKlB,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA9CyC","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nexport default class Search extends Component {\r\n\r\n    search = () => {\r\n         //判断是否是回车按键\r\n         if (keyCode !== 13) return\r\n        //获取用户输入(连续结构赋值+重命名)\r\n        const { keyWordElement: { value: keyWord } } = this\r\n        //发送前请求前通知App更新状态\r\n        this.props.updateAppState({ isFirst: false, isLoading: true })\r\n        //发送网络请求\r\n        axios.get(`/api1/search/users?q=${keyWord}`).then(\r\n            response => {\r\n                //请求成功后通知App更新状态\r\n                this.props.updateAppState({ isLoading: false, users: response.data.items })\r\n            },\r\n            error => {\r\n                //请求失败后通知App更新状态\r\n                this.props.updateAppState({ isLoading: false, err: error.message })\r\n            }\r\n        )\r\n    }\r\n    //键盘事件的回调\r\n    handleKeyUp = (event) => {\r\n        //解构赋值获取keyCode,target\r\n        const { keyCode, target } = event\r\n        //判断是否是回车按键\r\n        if (keyCode !== 13) return\r\n        //添加的todo名字不能为空，      .trim()去掉空格\r\n        if (target.value.trim() === '') {\r\n            alert('输入不能为空')\r\n            return\r\n        }\r\n        this.props.addTodo(todoObj)\r\n        //清空输入\r\n        target.value = ''\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"jumbotron\">\r\n                <h3 className=\"jumbotron-heading\">搜索Github用户</h3>\r\n                <div>\r\n                    <input ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"输入关键词点击搜索\" />&nbsp;\r\n                    <button onKeyUp={this.handleKeyUp} onClick={this.search}>搜索</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}