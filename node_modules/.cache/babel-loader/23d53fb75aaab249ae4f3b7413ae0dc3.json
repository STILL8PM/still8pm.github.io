{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\idea\\\\react\\\\react_staging\\\\src\\\\component\\\\Search\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.search = () => {\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this; //发送前请求前通知List更新状态\n\n      this.props.updateAppState({\n        isFirst: false,\n        isLoading: true\n      }); //发送网络请求\n\n      axios.get(`/api1/search/users?q=${keyWord}`).then(response => {\n        //请求成功后通知App更新状态\n        this.props.updateAppState({\n          isLoading: false,\n          users: response.data.items\n        });\n      }, error => {\n        //请求失败后通知App更新状态\n        this.props.updateAppState({\n          isLoading: false,\n          err: error.message\n        });\n      });\n    };\n\n    this.handleKeyUp = event => {\n      const {\n        keyCode\n      } = event;\n      if (keyCode !== 13) return;\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this; //发送前请求前通知App更新状态\n\n      this.props.updateAppState({\n        isFirst: false,\n        isLoading: true\n      }); //发送网络请求\n\n      axios.get(`/api1/search/users?q=${keyWord}`).then(response => {\n        //请求成功后通知App更新状态\n        this.props.updateAppState({\n          isLoading: false,\n          users: response.data.items\n        });\n      }, error => {\n        //请求失败后通知App更新状态\n        this.props.updateAppState({\n          isLoading: false,\n          err: error.message\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22Github\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onKeyUp: this.handleKeyUp,\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u8BCD\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Github/idea/react/react_staging/src/component/Search/index.jsx"],"names":["React","Component","axios","Search","search","keyWordElement","value","keyWord","props","updateAppState","isFirst","isLoading","get","then","response","users","data","items","error","err","message","handleKeyUp","event","keyCode","render","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE7CG,MAF6C,GAEpC,MAAM;AACd,YAAM;AAAEC,QAAAA,cAAc,EAAE;AAAEC,UAAAA,KAAK,EAAEC;AAAT;AAAlB,UAAyC,IAA/C,CADc,CAEd;;AACA,WAAKC,KAAL,CAAWC,cAAX,CAA0B;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAA1B,EAHc,CAId;;AACAT,MAAAA,KAAK,CAACU,GAAN,CAAW,wBAAuBL,OAAQ,EAA1C,EAA6CM,IAA7C,CACCC,QAAQ,IAAI;AACX;AACA,aAAKN,KAAL,CAAWC,cAAX,CAA0B;AAAEE,UAAAA,SAAS,EAAE,KAAb;AAAoBI,UAAAA,KAAK,EAAED,QAAQ,CAACE,IAAT,CAAcC;AAAzC,SAA1B;AACA,OAJF,EAKCC,KAAK,IAAI;AACR;AACA,aAAKV,KAAL,CAAWC,cAAX,CAA0B;AAAEE,UAAAA,SAAS,EAAE,KAAb;AAAoBQ,UAAAA,GAAG,EAAED,KAAK,CAACE;AAA/B,SAA1B;AACA,OARF;AAUA,KAjB4C;;AAAA,SAmB7CC,WAnB6C,GAmB9BC,KAAD,IAAW;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAcD,KAApB;AACA,UAAIC,OAAO,KAAK,EAAhB,EAAoB;AACpB,YAAM;AAAElB,QAAAA,cAAc,EAAE;AAAEC,UAAAA,KAAK,EAAEC;AAAT;AAAlB,UAAyC,IAA/C,CAHwB,CAIxB;;AACA,WAAKC,KAAL,CAAWC,cAAX,CAA0B;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,SAAS,EAAE;AAA7B,OAA1B,EALwB,CAMxB;;AACAT,MAAAA,KAAK,CAACU,GAAN,CAAW,wBAAuBL,OAAQ,EAA1C,EAA6CM,IAA7C,CACCC,QAAQ,IAAI;AACX;AACA,aAAKN,KAAL,CAAWC,cAAX,CAA0B;AAAEE,UAAAA,SAAS,EAAE,KAAb;AAAoBI,UAAAA,KAAK,EAAED,QAAQ,CAACE,IAAT,CAAcC;AAAzC,SAA1B;AACA,OAJF,EAKCC,KAAK,IAAI;AACR;AACA,aAAKV,KAAL,CAAWC,cAAX,CAA0B;AAAEE,UAAAA,SAAS,EAAE,KAAb;AAAoBQ,UAAAA,GAAG,EAAED,KAAK,CAACE;AAA/B,SAA1B;AACA,OARF;AAUA,KApC4C;AAAA;;AAsC7CI,EAAAA,MAAM,GAAG;AACR,wBACC;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACC;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,gCACC;AAAO,UAAA,OAAO,EAAE,KAAKH,WAArB;AAAkC,UAAA,GAAG,EAAEI,CAAC,IAAI,KAAKpB,cAAL,GAAsBoB,CAAlE;AAAqE,UAAA,IAAI,EAAC,MAA1E;AAAiF,UAAA,WAAW,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA,gBADD,uBAEC;AAAQ,UAAA,OAAO,EAAE,KAAKrB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AASA;;AAhD4C","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nexport default class Search extends Component {\r\n\r\n\tsearch = () => {\r\n\t\tconst { keyWordElement: { value: keyWord } } = this\r\n\t\t//发送前请求前通知List更新状态\r\n\t\tthis.props.updateAppState({ isFirst: false, isLoading: true })\r\n\t\t//发送网络请求\r\n\t\taxios.get(`/api1/search/users?q=${keyWord}`).then(\r\n\t\t\tresponse => {\r\n\t\t\t\t//请求成功后通知App更新状态\r\n\t\t\t\tthis.props.updateAppState({ isLoading: false, users: response.data.items })\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\t//请求失败后通知App更新状态\r\n\t\t\t\tthis.props.updateAppState({ isLoading: false, err: error.message })\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\thandleKeyUp = (event) => {\r\n\t\tconst { keyCode } = event\r\n\t\tif (keyCode !== 13) return\r\n\t\tconst { keyWordElement: { value: keyWord } } = this\r\n\t\t//发送前请求前通知App更新状态\r\n\t\tthis.props.updateAppState({ isFirst: false, isLoading: true })\r\n\t\t//发送网络请求\r\n\t\taxios.get(`/api1/search/users?q=${keyWord}`).then(\r\n\t\t\tresponse => {\r\n\t\t\t\t//请求成功后通知App更新状态\r\n\t\t\t\tthis.props.updateAppState({ isLoading: false, users: response.data.items })\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\t//请求失败后通知App更新状态\r\n\t\t\t\tthis.props.updateAppState({ isLoading: false, err: error.message })\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section className=\"jumbotron\">\r\n\t\t\t\t<h3 className=\"jumbotron-heading\">搜索Github用户</h3>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input onKeyUp={this.handleKeyUp} ref={c => this.keyWordElement = c} type=\"text\" placeholder=\"输入关键词点击搜索\" />&nbsp;\r\n\t\t\t\t\t<button onClick={this.search}>搜索</button>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}